<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="https://www.w3.org/2005/Atom">
  <channel>
    <title>Arcobjects on Josh Werts</title>
    <link>https://joshwerts.com/tags/arcobjects/</link>
    <description>Recent content in Arcobjects on Josh Werts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Apr 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://joshwerts.com/tags/arcobjects/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Debugging Server Object Extensions (SOEs) in Style</title>
      <link>https://joshwerts.com/blog/2015/04/12/debugging-server-object-extensions-soe-in-style/</link>
      <pubDate>Sun, 12 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://joshwerts.com/blog/2015/04/12/debugging-server-object-extensions-soe-in-style/</guid>
      <description>

&lt;p&gt;Server Object Extensions (SOEs) can be incredibly powerful, but they can also be a pain to debug.&lt;/p&gt;

&lt;h4 id=&#34;typical-workflow:2143b7784ee121ce40ff096ceffe4741&#34;&gt;Typical workflow:&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Rebuild solution&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Open ArcGIS Manager in browser -&amp;gt; Site -&amp;gt; Extensions -&amp;gt; Update Extension by selecting .soe file.&lt;/li&gt;
&lt;li&gt;Restart all of the services that depended on the SOE.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Attach Visual Studio to process.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Steps 2 &amp;amp; 3 are the really annoying ones, but they can be automated!&lt;/p&gt;

&lt;p&gt;It turns out this is really a post about REST and Python.&lt;/p&gt;

&lt;p&gt;When you update an SOE through the ArcGIS Manager app (&lt;a href=&#34;https://localhost/arcgis/manager&#34;&gt;https://localhost/arcgis/manager&lt;/a&gt;), the web application is actually making calls to ArcGIS Server REST admin endpoints.&lt;/p&gt;

&lt;h3 id=&#34;automate-with-python:2143b7784ee121ce40ff096ceffe4741&#34;&gt;Automate with Python&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;ll cut to the chase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;See the full script here:&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/jwerts/soe-updater&#34;&gt;https://github.com/jwerts/soe-updater&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Usage (simply run from command line after rebuilding SOE solution):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\Projects\_General\_Code\soe-updater&amp;gt;python update_soe.py

Retrieving token...
Retrieved: oUK04q-J8ORWDUrSWGPfq8zAU29u3q5_YZ79ZvcFZx8kFneOMb5Z2Y2Yf19
Uploading SOE...
Uploaded: ibd792bae-a986-4861-8ac3-c16d42f4d610
Updating SOE...
Updated!
Starting services...
Starting service_folder/service.MapServer
Started!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your SOE will be updated and services restarted.  You can re-attach to the service processes or if you&amp;rsquo;re using &lt;code&gt;System.Diagnostics.Debugger.Launch();&lt;/code&gt; in your &lt;code&gt;Init()&lt;/code&gt; function, you&amp;rsquo;ll automatically be greeted with the dialog to attach your process once the script finishes and the services restart.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;br/&gt;
Now a little explanation of what&amp;rsquo;s going on&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;rest-api-calls:2143b7784ee121ce40ff096ceffe4741&#34;&gt;REST API Calls&lt;/h3&gt;

&lt;h4 id=&#34;generate-token:2143b7784ee121ce40ff096ceffe4741&#34;&gt;Generate token&lt;/h4&gt;

&lt;p&gt;Because we&amp;rsquo;re going to automate this, we need a preliminary step.  We&amp;rsquo;ll generate a token that can be passed to subsequent steps.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://localhost/arcgis/rest/tokens
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;upload-the-soe:2143b7784ee121ce40ff096ceffe4741&#34;&gt;Upload the SOE&lt;/h4&gt;

&lt;p&gt;The .soe file that gets generated after building in Visual Studio is uploaded to ArcGIS Server and returns an itemID.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://localhost/arcgis/admin/uploads/upload
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;update-the-soe:2143b7784ee121ce40ff096ceffe4741&#34;&gt;Update the SOE&lt;/h4&gt;

&lt;p&gt;Another call references the uploaded .soe through the itemID and updates the extension.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://localhost/arcgis/admin/services/types/extensions/update
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;restart-services:2143b7784ee121ce40ff096ceffe4741&#34;&gt;Restart services&lt;/h4&gt;

&lt;p&gt;After the SOE is updated, all services that use it are stopped and must be restarted.  This can also be accomplished through REST calls:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://localhost/arcgis/admin/services/[service_folder]/[service_name]/start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These calls are all pretty straightford to automate in a Python script using the requests library (&lt;a href=&#34;https://docs.python-requests.org/en/latest/&#34;&gt;https://docs.python-requests.org/en/latest/&lt;/a&gt;).&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>